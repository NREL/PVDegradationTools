name: nbval

on: [pull_request]

jobs:
  notebook-check:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # don't cancel other matrix jobs when one fails
      matrix:
        notebook-file: [
          "1 - Basics, Humidity, Design.ipynb",
          "2 - Degradation.ipynb",
          "3 - Spectral Degradation.ipynb",
          "4 - Weather Database Access.ipynb",
          "ASTM Live Demo.ipynb",
          "B-O LID - Accelerated Test.ipynb",
          "Custom-Functions-Nopython.ipynb",
          "DuraMAT Live Demo.ipynb",
          "Geospatial - Local Scenario.ipynb",
          "Geospatial Templates.ipynb",
          "Geospatial_world_map.ipynb",
          "LETID - Accelerated Test.ipynb",
          "LETID - Outdoor Geospatial Demo.ipynb",
          "LETID - Outdoor LETID.ipynb",
          "LETID - Outdoor Scenario Based on Accelerated Test Result.ipynb",
          "LETID - Passivated Wafer.ipynb",
          "load_nsrdb_distributed.ipynb",
          "load_pvgis_distributed.ipynb",
          "Monte Carlo - Arrhenius.ipynb",
          "Monte Carlo - Standoff.ipynb",
          "Pysam - Single Location.ipynb",
          "PYSam.ipynb",
          "Scenario - Geographical Features.ipynb",
          "Scenario - Geospatial.ipynb",
          "Scenario - Non-uniform Mountain Prefferential Downselect.ipynb",
          "Scenario - Single Location.ipynb",
          "Scenario - Temperatrure.ipynb",
          "Tools - Edge Seal Oxygen Ingress.ipynb",
          "Tools - Module Standoff for IEC TS 63126.ipynb",
          "Van't Hoff Degradation Model.ipynb",
        ]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install notebook environment
      run: |
        python -m pip install --upgrade pip wheel
        pip install --timeout=300 \
            -r tutorials_and_tools/requirements.txt
        pip install --timeout=300 -e .[test]
        pip install nbval
        pip install global_land_mask dotenv imageio # dependency for certain notebooks
    - name: Run notebook and check output
      run: |
        # --nbval-sanitize-with: pre-process text to remove irrelevant differences
        pytest --nbval \
               "tutorials_and_tools/tutorials_and_tools/${{ matrix.notebook-file }}" \
               --nbval-sanitize-with nbval_sanitization_rules.cfg
    - name: Run notebooks again, save files
      run: |
        pip install nbconvert[webpdf]
        NOTEBOOK_DIR="tutorials_and_tools/tutorials_and_tools"
        mkdir -p "$NOTEBOOK_DIR/artifacts"
        cd "$NOTEBOOK_DIR"
        # Copy conftest.py so the notebook kernel can import it and apply patches
        cp ../../conftest.py .
        # Inject an import statement into the first cell of the notebook
        python << 'EOF'
        import json
        notebook_file = "${{ matrix.notebook-file }}"
        with open(notebook_file, 'r') as f:
            notebook = json.load(f)
        import_cell = {
            "cell_type": "code",
            "execution_count": None,
            "metadata": {},
            "outputs": [],
            "source": ["# This cell is injected by the CI to apply test patches\nimport conftest"]
        }
        notebook['cells'].insert(0, import_cell)
        with open(notebook_file, 'w') as f:
            json.dump(notebook, f, indent=2)
        EOF
        # Now execute the modified notebook
        jupyter nbconvert --to html --execute \
                          --ExecutePreprocessor.timeout=600 \
                          --allow-errors \
                          --output "artifacts/${{ matrix.notebook-file }}.html" \
                          "${{ matrix.notebook-file }}"
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: executed_notebook_${{ matrix.notebook-file }}
        path: tutorials_and_tools/tutorials_and_tools/artifacts