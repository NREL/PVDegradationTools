Traceback (most recent call last):
  File "C:\Users\sayala\AppData\Roaming\Python\Python39\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from cycler import cycler
plt.style.use('default')

fig, ax = plt.subplots()

ax.set_prop_cycle(cycler('color', ['tab:blue', 'tab:orange', 'tab:green']) + cycler('linestyle', ['-', '--', '-.']))

ax.plot(timesteps['time (s)'], timesteps[['NA', 'NB', 'NC']].values)
ax.legend(labels = ['$N_A$', '$N_B$', '$N_C$'], loc = 'upper left')
ax.set_ylabel('Defect state percentages [%]')
ax.set_xlabel('Time [s]')

ax2 = ax.twinx()
c_norm = 1.35 #Normalization constants "C_norm". See Repins 2023 for details
ax2.plot(timesteps['time (s)'], timesteps['NDD']*c_norm, c = 'black', label = 'NDD modeled')
ax.set_ylabel('NDD [$\mu s^{-1}$]')

data = pd.read_csv('example data\wyller data.csv', header = 0)
filtered = data[data['Series'] == '0.5 sun 125C']
ax2.scatter(filtered['X'], filtered['Y'], label = 'NDD data from Wyller', marker = 'v', c = 'black')

ax2.legend(loc = 'center left')

ax.set_xscale('log')

ax.set_title('Accelerated LETID Test (wafer)\n'fr'{temperature}$\degree$C, {suns} suns illumination')

plt.show()
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mFileNotFoundError[0m                         Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\1\ipykernel_24368\2663229218.py[0m in [0;36m<module>[1;34m[0m
[0;32m     16[0m [0max[0m[1;33m.[0m[0mset_ylabel[0m[1;33m([0m[1;34m'NDD [$\mu s^{-1}$]'[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m     17[0m [1;33m[0m[0m
[1;32m---> 18[1;33m [0mdata[0m [1;33m=[0m [0mpd[0m[1;33m.[0m[0mread_csv[0m[1;33m([0m[1;34m'example data\wyller data.csv'[0m[1;33m,[0m [0mheader[0m [1;33m=[0m [1;36m0[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     19[0m [0mfiltered[0m [1;33m=[0m [0mdata[0m[1;33m[[0m[0mdata[0m[1;33m[[0m[1;34m'Series'[0m[1;33m][0m [1;33m==[0m [1;34m'0.5 sun 125C'[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[0;32m     20[0m [0max2[0m[1;33m.[0m[0mscatter[0m[1;33m([0m[0mfiltered[0m[1;33m[[0m[1;34m'X'[0m[1;33m][0m[1;33m,[0m [0mfiltered[0m[1;33m[[0m[1;34m'Y'[0m[1;33m][0m[1;33m,[0m [0mlabel[0m [1;33m=[0m [1;34m'NDD data from Wyller'[0m[1;33m,[0m [0mmarker[0m [1;33m=[0m [1;34m'v'[0m[1;33m,[0m [0mc[0m [1;33m=[0m [1;34m'black'[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Roaming\Python\Python39\site-packages\pandas\io\parsers\readers.py[0m in [0;36mread_csv[1;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)[0m
[0;32m    910[0m     [0mkwds[0m[1;33m.[0m[0mupdate[0m[1;33m([0m[0mkwds_defaults[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    911[0m [1;33m[0m[0m
[1;32m--> 912[1;33m     [1;32mreturn[0m [0m_read[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [0mkwds[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    913[0m [1;33m[0m[0m
[0;32m    914[0m [1;33m[0m[0m

[1;32m~\AppData\Roaming\Python\Python39\site-packages\pandas\io\parsers\readers.py[0m in [0;36m_read[1;34m(filepath_or_buffer, kwds)[0m
[0;32m    575[0m [1;33m[0m[0m
[0;32m    576[0m     [1;31m# Create the parser.[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 577[1;33m     [0mparser[0m [1;33m=[0m [0mTextFileReader[0m[1;33m([0m[0mfilepath_or_buffer[0m[1;33m,[0m [1;33m**[0m[0mkwds[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    578[0m [1;33m[0m[0m
[0;32m    579[0m     [1;32mif[0m [0mchunksize[0m [1;32mor[0m [0miterator[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Roaming\Python\Python39\site-packages\pandas\io\parsers\readers.py[0m in [0;36m__init__[1;34m(self, f, engine, **kwds)[0m
[0;32m   1405[0m [1;33m[0m[0m
[0;32m   1406[0m         [0mself[0m[1;33m.[0m[0mhandles[0m[1;33m:[0m [0mIOHandles[0m [1;33m|[0m [1;32mNone[0m [1;33m=[0m [1;32mNone[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1407[1;33m         [0mself[0m[1;33m.[0m[0m_engine[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0m_make_engine[0m[1;33m([0m[0mf[0m[1;33m,[0m [0mself[0m[1;33m.[0m[0mengine[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1408[0m [1;33m[0m[0m
[0;32m   1409[0m     [1;32mdef[0m [0mclose[0m[1;33m([0m[0mself[0m[1;33m)[0m [1;33m->[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Roaming\Python\Python39\site-packages\pandas\io\parsers\readers.py[0m in [0;36m_make_engine[1;34m(self, f, engine)[0m
[0;32m   1659[0m                 [1;32mif[0m [1;34m"b"[0m [1;32mnot[0m [1;32min[0m [0mmode[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1660[0m                     [0mmode[0m [1;33m+=[0m [1;34m"b"[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1661[1;33m             self.handles = get_handle(
[0m[0;32m   1662[0m                 [0mf[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1663[0m                 [0mmode[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Roaming\Python\Python39\site-packages\pandas\io\common.py[0m in [0;36mget_handle[1;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[0;32m    857[0m         [1;32mif[0m [0mioargs[0m[1;33m.[0m[0mencoding[0m [1;32mand[0m [1;34m"b"[0m [1;32mnot[0m [1;32min[0m [0mioargs[0m[1;33m.[0m[0mmode[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    858[0m             [1;31m# Encoding[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 859[1;33m             handle = open(
[0m[0;32m    860[0m                 [0mhandle[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    861[0m                 [0mioargs[0m[1;33m.[0m[0mmode[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;31mFileNotFoundError[0m: [Errno 2] No such file or directory: 'example data\\wyller data.csv'
FileNotFoundError: [Errno 2] No such file or directory: 'example data\\wyller data.csv'

