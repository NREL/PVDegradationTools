Traceback (most recent call last):
  File "C:\Users\sayala\AppData\Roaming\Python\Python39\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\ProgramData\Anaconda3\lib\asyncio\base_events.py", line 647, in run_until_complete
    return future.result()
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\ProgramData\Anaconda3\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Get weather data
weather_db = 'NSRDB'
weather_id = (39.741931, -105.169891)
#weather_id = 1933572
weather_arg = {'satellite': 'GOES',
               'names': 2021,
               'NREL_HPC': True,
               'attributes': ['air_temperature', 'wind_speed', 'dhi', 'ghi', 'dni', 'relative_humidity']}

weather_df, meta = pvdeg.weather.get(weather_db, weather_id, **weather_arg)

------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mFileNotFoundError[0m                         Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\1\ipykernel_4672\1678303396.py[0m in [0;36m<module>[1;34m[0m
[0;32m      8[0m                'attributes': ['air_temperature', 'wind_speed', 'dhi', 'ghi', 'dni', 'relative_humidity']}
[0;32m      9[0m [1;33m[0m[0m
[1;32m---> 10[1;33m [0mweather_df[0m[1;33m,[0m [0mmeta[0m [1;33m=[0m [0mpvdeg[0m[1;33m.[0m[0mweather[0m[1;33m.[0m[0mget[0m[1;33m([0m[0mweather_db[0m[1;33m,[0m [0mweather_id[0m[1;33m,[0m [1;33m**[0m[0mweather_arg[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m
[1;32mc:\users\sayala\documents\github\pvdegtool\pvdegradationtools\pvdeg\weather.py[0m in [0;36mget[1;34m(database, id, **kwargs)[0m
[0;32m     52[0m     [1;31m# "map variables" will guarantee PVLIB conventions (automatic in coming update) which is "temp_air"[0m[1;33m[0m[1;33m[0m[0m
[0;32m     53[0m     [1;32mif[0m [0mdatabase[0m [1;33m==[0m [1;34m'NSRDB'[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 54[1;33m         [0mweather_df[0m[1;33m,[0m [0mmeta[0m [1;33m=[0m [0mget_NSRDB[0m[1;33m([0m[0mgid[0m[1;33m=[0m[0mgid[0m[1;33m,[0m [0mlocation[0m[1;33m=[0m[0mlocation[0m[1;33m,[0m [1;33m**[0m[0mkwargs[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     55[0m     [1;32melif[0m [0mdatabase[0m [1;33m==[0m [1;34m'PVGIS'[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m     56[0m         weather_df, _, meta, _ = iotools.get_pvgis_tmy(latitude=lat, longitude=lon,

[1;32mc:\users\sayala\documents\github\pvdegtool\pvdegradationtools\pvdeg\weather.py[0m in [0;36mget_NSRDB[1;34m(satellite, names, NREL_HPC, gid, location, attributes, **_)[0m
[0;32m    242[0m     [0mMETA_MAP[0m [1;33m=[0m [1;33m{[0m[1;34m'elevation'[0m [1;33m:[0m [1;34m'altitude'[0m[1;33m}[0m[1;33m[0m[1;33m[0m[0m
[0;32m    243[0m [1;33m[0m[0m
[1;32m--> 244[1;33m     [0mnsrdb_fnames[0m[1;33m,[0m [0mhsds[0m [1;33m=[0m [0mget_NSRDB_fnames[0m[1;33m([0m[0msatellite[0m[1;33m,[0m [0mnames[0m[1;33m,[0m [0mNREL_HPC[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    245[0m [1;33m[0m[0m
[0;32m    246[0m     [0mdattr[0m [1;33m=[0m [1;33m{[0m[1;33m}[0m[1;33m[0m[1;33m[0m[0m

[1;32mc:\users\sayala\documents\github\pvdegtool\pvdegradationtools\pvdeg\weather.py[0m in [0;36mget_NSRDB_fnames[1;34m(satellite, names, NREL_HPC, **_)[0m
[0;32m    201[0m [1;33m[0m[0m
[0;32m    202[0m     [1;32mif[0m [0mlen[0m[1;33m([0m[0mnsrdb_fnames[0m[1;33m)[0m [1;33m==[0m [1;36m0[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 203[1;33m         raise FileNotFoundError(
[0m[0;32m    204[0m             "Couldn't find NSRDB input files! \nSearched for: '{}'".format(nsrdb_fp))
[0;32m    205[0m [1;33m[0m[0m

[1;31mFileNotFoundError[0m: Couldn't find NSRDB input files! 
Searched for: '/datasets/NSRDB/full_disc\*_2021.h5'
FileNotFoundError: Couldn't find NSRDB input files! 
Searched for: '/datasets/NSRDB/full_disc\*_2021.h5'

