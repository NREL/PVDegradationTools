name: nbval

on: [pull_request]

jobs:
  notebook-check:
    runs-on: ubuntu-latest
    env:
      NOTEBOOK_DIR: "tutorials_and_tools/tutorials_and_tools"
      SANITIZE_CFG: "nbval_sanitization_rules.cfg"
      NOTEBOOK_LIST: |
        "1 - Basics, Humidity, Design.ipynb"
        "2 - Degradation.ipynb"
        "3 - Spectral Degradation.ipynb"
        "4 - Weather Database Access.ipynb"
        "ASTM Live Demo.ipynb"
        "B-O LID - Accelerated Test.ipynb"
        "Custom-Functions-Nopython.ipynb"
        "LETID - Accelerated Test.ipynb"
        "LETID - Outdoor LETID.ipynb"
        "LETID - Outdoor Scenario Based on Accelerated Test Result.ipynb"
        "LETID - Passivated Wafer.ipynb"
        "Monte Carlo - Arrhenius.ipynb"
        "Monte Carlo - Standoff.ipynb"
        "Pysam - Single Location.ipynb"
        "Tools - Edge Seal Oxygen Ingress.ipynb"
        "Van't Hoff Degradation Model.ipynb"
        "Geospatial - Local Scenario.ipynb"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install notebook environment
        run: |
          python -m pip install --upgrade pip wheel
          pip install --timeout=300 -r tutorials_and_tools/requirements.txt
          pip install --timeout=300 -e .[test]
          pip install nbval global_land_mask dotenv imageio nrel-pysam
          pip install nbconvert[webpdf]

      - name: Run listed notebooks with nbval
        run: |
          # Read the environment variable string into a shell array
          mapfile -t NOTEBOOKS < <(echo "$NOTEBOOK_LIST")

          # Prepend the NOTEBOOK_DIR path to each notebook name
          mapfile -t FULL_PATHS < <(for notebook in "${NOTEBOOKS[@]}"; do
             NOTEBOOK_NAME="${notebook//\"/}"
             echo "$NOTEBOOK_DIR/$NOTEBOOK_NAME"
          done)

          # Execute a single pytest command with all full paths as arguments
          echo "Testing the following notebooks: ${FULL_PATHS[*]}"
          pytest --nbval \
                 --nbval-sanitize-with "$SANITIZE_CFG" \
                 "${FULL_PATHS[@]}"
